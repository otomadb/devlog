---
import type { InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import Layout from "~/layouts/RootLayout.astro";

export async function getStaticPaths() {
  const postEntries = await getCollection("reports");
  return postEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry }: Props = Astro.props;
const { Content } = await entry.render();
---

<style lang="scss">
  .title {
    margin-block-end: 0.75rem;
    padding-block-end: 0.75rem;
    border-block-end: 1px dotted #134e4a;

    h1 {
      color: #f1f5f9;
      font-size: 2rem;
      font-weight: 700;
      margin-block-start: 0.25rem;
      margin-block-end: 0.25rem;
    }

    & > div {
      display: flex;
      column-gap: 0.25rem;
    }

    .published-at {
      font-size: 0.95rem;
      color: #94a3b8;
    }

    .category {
      color: #2dd4bf;
      font-size: 0.95rem;
    }
  }

  .content {
    font-family: var(--font-sans-serif);
    color: var(--text-color);

    :global(figure) {
      padding: 0.75rem 1rem;
      margin-block-start: 1rem;
      margin-block-end: 1rem;
      background-color: #020617;
      border-left: 4px solid;
      border-left-color: #334155;
      border-radius: 4px;
      & > :global(blockquote) {
        & > :global(p) {
          color: #cbd5e1;
          &:before,
          &:after {
            color: #64748b;
          }
          &:before {
            content: "\201C";
          }
          &:after {
            content: "\201D";
          }
        }
      }
      & > :global(figcaption) {
        margin-block-start: 0.25rem;
        font-size: 0.9rem;
        color: #94a3b8;

        &:before {
          content: "—";
          margin-inline-end: 0.25rem;
          color: #64748b;
        }

        & > :global(cite) {
          font-style: italic;
          &:before,
          &:after {
            color: #64748b;
          }
          &:before {
            content: "\201C";
          }
          &:after {
            content: "\201D";
          }
        }
      }
    }

    :global(h2) {
      font-size: 1.5rem;
      font-weight: 700;
      margin-block-start: 1rem;
      padding-block-start: 1rem;
      border-block-start: 1px dashed #134e4a;
      margin-block-end: 0.5rem;
    }

    :global(#toc + ul) {
      padding: 0.5rem 0 0.5rem 2rem;
      list-style-type: square;
      & > :global(li) {
        &:not(:last-of-type) {
          margin-bottom: 0.25rem;
        }
        & > :global(a) {
          text-decoration: underline dotted #475569 1px;
        }
      }
    }

    :global(p) {
      font-size: 0.9rem;
    }
  }

  @media (prefers-color-scheme: light) {
    .title {

      h1{

      color: #0f172a;
      }
      .category {
        color: #0369a1;
      }
    .published-at {
      color: #334155;
    }
    }

    .content {
      :global(figure) {
        background-color: #e2e8f0;
        border-left-color: #334155;
      }
      :global(figure > blockquote > p) {
        color: #1e293b;
        &:before,
        &:after {
          color: #475569;
        }
      }
      :global(figure > figcaption) {
        color: #475569;
        &:before {
          color: #64748b;
        }
      }
      :global(figure > figcaption > cite) {
        &:before,
        &:after {
          color: #64748b;
        }
      }
    }
  }
</style>

<Layout>
  <div class="title">
    <h1>{entry.data.title}</h1>
    <div>
      <span class="category">進捗レポート</span>
      <span class="published-at">
        <time datetime={entry.data.publishedAt.toString()}
          >{
            new Intl.DateTimeFormat("ja-JP", {
              year: "numeric",
              month: "narrow",
              day: "numeric",
            }).format(entry.data.publishedAt)
          }</time
        >に公開
      </span>
    </div>
  </div>
  <div class="content">
    <Content />
  </div>
</Layout>
